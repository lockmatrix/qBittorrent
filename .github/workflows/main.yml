name: CI - Ubuntu - Dispatch

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}

jobs:
  ci:
    name: Build
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        libt_version: ["2.0.5"]
        qbt_gui: ["GUI=OFF"]
        qt_version: ["5.15.2"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install \
            build-essential cmake ninja-build pkg-config \
            libboost-dev libssl-dev zlib1g-dev
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          ccache_options: |
            max_size=2G
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}

      - name: Install libtorrent
        run: |
          git clone \
            --branch v${{ matrix.libt_version }} \
            --depth 1 \
            --recurse-submodules \
            https://github.com/arvidn/libtorrent.git
          cd libtorrent
          cmake \
            -B build \
            -G "Ninja" \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -Ddeprecated-functions=OFF
          cmake --build build
          sudo cmake --install build
      - name: Build qBittorrent (Qt5)
        if: ${{ startsWith(matrix.qt_version, 5) }}
        run: |
          lupdate -extensions c,cpp,h,hpp,ui ./
          cmake \
            -B build \
            -G "Ninja" \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DCMAKE_INSTALL_PREFIX="/usr" \
            -DVERBOSE_CONFIGURE=ON \
            -D${{ matrix.qbt_gui }}
          cmake --build build
          DESTDIR="qbittorrent" cmake --install build
      - name: Prepare build artifacts
        run: |
          mkdir upload
          cp -r build/qbittorrent-nox upload/
          cp $Qt5_DIR/lib/libQt5Network.so.5 upload/
          cp $Qt5_DIR/lib/libQt5Sql.so.5 upload/
          cp $Qt5_DIR/lib/libQt5Xml.so.5 upload/
          cp $Qt5_DIR/lib/libQt5Core.so.5 upload/
          ldd build/qbittorrent-nox
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-20.04-x64_libtorrent-${{ matrix.libt_version }}
          path: upload
